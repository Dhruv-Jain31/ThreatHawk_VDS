import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// Import Providers component that will wrap the whole app (commonly used for SessionProvider, ThemeProvider, etc.)
import { Providers } from "../app/providers";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Root layout wraps your entire app, including all pages and components
// `children` here represents the nested page content (like <Home />, <Dashboard />, etc.)
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode; // children can be any valid React nodes/components
}>) {
  return (
    <html lang="en">
      <body
        // Apply both font variables and enable antialiasing for smoother font rendering
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/*
          Wrap all page content (children) inside Providers.
          This allows things like SessionProvider, ThemeProvider, etc., 
          to make context available to every page. and they get
          automatically passed to there props
        */}
        <Providers>
          {children}
        </Providers>
      </body>
    </html>
  );
}

